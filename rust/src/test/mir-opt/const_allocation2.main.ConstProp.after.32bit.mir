// MIR for `main` after ConstProp

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/const_allocation2.rs:4:11: 4:11
    let _1: &[(std::option::Option<i32>, &[&u8])]; // in scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
    let mut _2: &&[(std::option::Option<i32>, &[&u8])]; // in scope 0 at $DIR/const_allocation2.rs:5:5: 5:8

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        StorageLive(_2);                 // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        _2 = const {alloc0: &&[(Option<i32>, &[&u8])]}; // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
                                         // ty::Const
                                         // + ty: &&[(std::option::Option<i32>, &[&u8])]
                                         // + val: Value(Scalar(alloc0))
                                         // mir::Constant
                                         // + span: $DIR/const_allocation2.rs:5:5: 5:8
                                         // + literal: Const { ty: &&[(std::option::Option<i32>, &[&u8])], val: Value(Scalar(alloc0)) }
        _1 = (*_2);                      // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8
        StorageDead(_2);                 // scope 0 at $DIR/const_allocation2.rs:5:8: 5:9
        StorageDead(_1);                 // scope 0 at $DIR/const_allocation2.rs:5:8: 5:9
        _0 = const ();                   // scope 0 at $DIR/const_allocation2.rs:4:11: 6:2
        return;                          // scope 0 at $DIR/const_allocation2.rs:6:2: 6:2
    }
}

alloc0 (static: FOO, size: 8, align: 4) {
    ╾─alloc20─╼ 03 00 00 00                         │ ╾──╼....
}

alloc20 (size: 48, align: 4) {
    0x00 │ 00 00 00 00 __ __ __ __ ╾─alloc8──╼ 00 00 00 00 │ ....░░░░╾──╼....
    0x10 │ 00 00 00 00 __ __ __ __ ╾─alloc12─╼ 02 00 00 00 │ ....░░░░╾──╼....
    0x20 │ 01 00 00 00 2a 00 00 00 ╾─alloc19─╼ 03 00 00 00 │ ....*...╾──╼....
}

alloc8 (size: 0, align: 4) {}

alloc12 (size: 8, align: 4) {
    ╾─alloc10─╼ ╾─alloc11─╼                         │ ╾──╼╾──╼
}

alloc10 (size: 1, align: 1) {
    05                                              │ .
}

alloc11 (size: 1, align: 1) {
    06                                              │ .
}

alloc19 (size: 12, align: 4) {
    ╾─a15+0x3─╼ ╾─alloc16─╼ ╾─a18+0x2─╼             │ ╾──╼╾──╼╾──╼
}

alloc15 (size: 4, align: 1) {
    2a 45 15 6f                                     │ *E.o
}

alloc16 (size: 1, align: 1) {
    2a                                              │ *
}

alloc18 (size: 4, align: 1) {
    2a 45 15 6f                                     │ *E.o
}
