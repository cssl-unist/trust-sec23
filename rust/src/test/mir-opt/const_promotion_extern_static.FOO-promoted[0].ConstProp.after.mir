// MIR for `FOO::promoted[0]` after ConstProp

promoted[0] in FOO: &[&i32; 1] = {
    let mut _0: &[&i32; 1];              // return place in scope 0 at $DIR/const-promotion-extern-static.rs:13:31: 13:46
    let mut _1: [&i32; 1];               // in scope 0 at $DIR/const-promotion-extern-static.rs:13:31: 13:46
    let mut _2: &i32;                    // in scope 0 at $DIR/const-promotion-extern-static.rs:13:32: 13:45
    let mut _3: *const i32;              // in scope 0 at $DIR/const-promotion-extern-static.rs:13:42: 13:43

    bb0: {
        _3 = const {alloc2: *const i32}; // scope 0 at $DIR/const-promotion-extern-static.rs:13:42: 13:43
                                         // ty::Const
                                         // + ty: *const i32
                                         // + val: Value(Scalar(alloc2))
                                         // mir::Constant
                                         // + span: $DIR/const-promotion-extern-static.rs:13:42: 13:43
                                         // + literal: Const { ty: *const i32, val: Value(Scalar(alloc2)) }
        _2 = &(*_3);                     // scope 0 at $DIR/const-promotion-extern-static.rs:13:41: 13:43
        _1 = [move _2];                  // scope 0 at $DIR/const-promotion-extern-static.rs:13:31: 13:46
        _0 = &_1;                        // scope 0 at $DIR/const-promotion-extern-static.rs:13:31: 13:46
        return;                          // scope 0 at $DIR/const-promotion-extern-static.rs:13:31: 13:46
    }
}

alloc2 (extern static: X)
