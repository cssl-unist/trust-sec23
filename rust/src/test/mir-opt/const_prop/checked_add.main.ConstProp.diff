- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/checked_add.rs:4:11: 4:11
      let _1: u32;                         // in scope 0 at $DIR/checked_add.rs:5:9: 5:10
      let mut _2: (u32, bool);             // in scope 0 at $DIR/checked_add.rs:5:18: 5:23
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/checked_add.rs:5:9: 5:10
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/checked_add.rs:5:9: 5:10
-         _2 = CheckedAdd(const 1_u32, const 1_u32); // scope 0 at $DIR/checked_add.rs:5:18: 5:23
-         assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:5:18: 5:23
+         _2 = const (2_u32, false);       // scope 0 at $DIR/checked_add.rs:5:18: 5:23
+                                          // ty::Const
+                                          // + ty: (u32, bool)
+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })
+                                          // mir::Constant
+                                          // + span: $DIR/checked_add.rs:5:18: 5:23
+                                          // + literal: Const { ty: (u32, bool), val: Value(ByRef { alloc: Allocation { bytes: [2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }
+         assert(!const false, "attempt to compute `{} + {}`, which would overflow", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:5:18: 5:23
      }
  
      bb1: {
-         _1 = move (_2.0: u32);           // scope 0 at $DIR/checked_add.rs:5:18: 5:23
+         _1 = const 2_u32;                // scope 0 at $DIR/checked_add.rs:5:18: 5:23
          _0 = const ();                   // scope 0 at $DIR/checked_add.rs:4:11: 6:2
          StorageDead(_1);                 // scope 0 at $DIR/checked_add.rs:6:1: 6:2
          return;                          // scope 0 at $DIR/checked_add.rs:6:2: 6:2
      }
  }
  
