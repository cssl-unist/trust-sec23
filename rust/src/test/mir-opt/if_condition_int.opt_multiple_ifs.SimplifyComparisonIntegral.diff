- // MIR for `opt_multiple_ifs` before SimplifyComparisonIntegral
+ // MIR for `opt_multiple_ifs` after SimplifyComparisonIntegral
  
  fn opt_multiple_ifs(_1: u32) -> u32 {
      debug x => _1;                       // in scope 0 at $DIR/if-condition-int.rs:32:21: 32:22
      let mut _0: u32;                     // return place in scope 0 at $DIR/if-condition-int.rs:32:32: 32:35
      let mut _2: bool;                    // in scope 0 at $DIR/if-condition-int.rs:33:8: 33:15
      let mut _3: u32;                     // in scope 0 at $DIR/if-condition-int.rs:33:8: 33:9
      let mut _4: bool;                    // in scope 0 at $DIR/if-condition-int.rs:35:15: 35:22
      let mut _5: u32;                     // in scope 0 at $DIR/if-condition-int.rs:35:15: 35:16
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/if-condition-int.rs:33:8: 33:15
          StorageLive(_3);                 // scope 0 at $DIR/if-condition-int.rs:33:8: 33:9
          _3 = _1;                         // scope 0 at $DIR/if-condition-int.rs:33:8: 33:9
-         _2 = Eq(move _3, const 42_u32);  // scope 0 at $DIR/if-condition-int.rs:33:8: 33:15
-         StorageDead(_3);                 // scope 0 at $DIR/if-condition-int.rs:33:14: 33:15
-         switchInt(_2) -> [false: bb1, otherwise: bb2]; // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
+         _2 = Eq(_3, const 42_u32);       // scope 0 at $DIR/if-condition-int.rs:33:8: 33:15
+         nop;                             // scope 0 at $DIR/if-condition-int.rs:33:14: 33:15
+         switchInt(move _3) -> [42_u32: bb2, otherwise: bb1]; // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
      }
  
      bb1: {
+         StorageDead(_3);                 // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
          StorageLive(_4);                 // scope 0 at $DIR/if-condition-int.rs:35:15: 35:22
          StorageLive(_5);                 // scope 0 at $DIR/if-condition-int.rs:35:15: 35:16
          _5 = _1;                         // scope 0 at $DIR/if-condition-int.rs:35:15: 35:16
-         _4 = Ne(move _5, const 21_u32);  // scope 0 at $DIR/if-condition-int.rs:35:15: 35:22
-         StorageDead(_5);                 // scope 0 at $DIR/if-condition-int.rs:35:21: 35:22
-         switchInt(_4) -> [false: bb3, otherwise: bb4]; // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
+         _4 = Ne(_5, const 21_u32);       // scope 0 at $DIR/if-condition-int.rs:35:15: 35:22
+         nop;                             // scope 0 at $DIR/if-condition-int.rs:35:21: 35:22
+         switchInt(move _5) -> [21_u32: bb3, otherwise: bb4]; // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
      }
  
      bb2: {
+         StorageDead(_3);                 // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
          _0 = const 0_u32;                // scope 0 at $DIR/if-condition-int.rs:34:9: 34:10
          goto -> bb6;                     // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
      }
  
      bb3: {
+         StorageDead(_5);                 // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
          _0 = const 2_u32;                // scope 0 at $DIR/if-condition-int.rs:38:9: 38:10
          goto -> bb5;                     // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
      }
  
      bb4: {
+         StorageDead(_5);                 // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
          _0 = const 1_u32;                // scope 0 at $DIR/if-condition-int.rs:36:9: 36:10
          goto -> bb5;                     // scope 0 at $DIR/if-condition-int.rs:35:12: 39:6
      }
  
      bb5: {
          StorageDead(_4);                 // scope 0 at $DIR/if-condition-int.rs:39:5: 39:6
          goto -> bb6;                     // scope 0 at $DIR/if-condition-int.rs:33:5: 39:6
      }
  
      bb6: {
          StorageDead(_2);                 // scope 0 at $DIR/if-condition-int.rs:40:1: 40:2
          return;                          // scope 0 at $DIR/if-condition-int.rs:40:2: 40:2
      }
  }
  
