// MIR for `foo` after Inline

fn foo(_1: T, _2: i32) -> i32 {
    debug _t => _1;                      // in scope 0 at $DIR/inline-closure.rs:10:17: 10:19
    debug q => _2;                       // in scope 0 at $DIR/inline-closure.rs:10:24: 10:25
    let mut _0: i32;                     // return place in scope 0 at $DIR/inline-closure.rs:10:35: 10:38
    let _3: [closure@foo<T>::{closure#0}]; // in scope 0 at $DIR/inline-closure.rs:11:9: 11:10
    let mut _4: &[closure@foo<T>::{closure#0}]; // in scope 0 at $DIR/inline-closure.rs:12:5: 12:6
    let mut _5: (i32, i32);              // in scope 0 at $DIR/inline-closure.rs:12:5: 12:12
    let mut _6: i32;                     // in scope 0 at $DIR/inline-closure.rs:12:7: 12:8
    let mut _7: i32;                     // in scope 0 at $DIR/inline-closure.rs:12:10: 12:11
    let mut _8: i32;                     // in scope 0 at $DIR/inline-closure.rs:12:5: 12:12
    let mut _9: i32;                     // in scope 0 at $DIR/inline-closure.rs:12:5: 12:12
    scope 1 {
        debug x => _3;                   // in scope 1 at $DIR/inline-closure.rs:11:9: 11:10
        scope 2 (inlined foo::<T>::{closure#0}) { // at $DIR/inline-closure.rs:12:5: 12:12
            debug _t => _8;              // in scope 2 at $DIR/inline-closure.rs:12:5: 12:12
            debug _q => _9;              // in scope 2 at $DIR/inline-closure.rs:12:5: 12:12
        }
    }

    bb0: {
        StorageLive(_3);                 // scope 0 at $DIR/inline-closure.rs:11:9: 11:10
        StorageLive(_4);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:6
        _4 = &_3;                        // scope 1 at $DIR/inline-closure.rs:12:5: 12:6
        StorageLive(_5);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        StorageLive(_6);                 // scope 1 at $DIR/inline-closure.rs:12:7: 12:8
        _6 = _2;                         // scope 1 at $DIR/inline-closure.rs:12:7: 12:8
        StorageLive(_7);                 // scope 1 at $DIR/inline-closure.rs:12:10: 12:11
        _7 = _2;                         // scope 1 at $DIR/inline-closure.rs:12:10: 12:11
        (_5.0: i32) = move _6;           // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        (_5.1: i32) = move _7;           // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        StorageLive(_8);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        _8 = move (_5.0: i32);           // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        StorageLive(_9);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        _9 = move (_5.1: i32);           // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        _0 = _8;                         // scope 2 at $DIR/inline-closure.rs:12:5: 12:12
        StorageDead(_9);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        StorageDead(_8);                 // scope 1 at $DIR/inline-closure.rs:12:5: 12:12
        StorageDead(_7);                 // scope 1 at $DIR/inline-closure.rs:12:11: 12:12
        StorageDead(_6);                 // scope 1 at $DIR/inline-closure.rs:12:11: 12:12
        StorageDead(_5);                 // scope 1 at $DIR/inline-closure.rs:12:11: 12:12
        StorageDead(_4);                 // scope 1 at $DIR/inline-closure.rs:12:11: 12:12
        StorageDead(_3);                 // scope 0 at $DIR/inline-closure.rs:13:1: 13:2
        return;                          // scope 0 at $DIR/inline-closure.rs:13:2: 13:2
    }
}
