- // MIR for `h` before Inline
+ // MIR for `h` after Inline
  
  fn h() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/inline-diverging.rs:21:12: 21:12
      let _1: (!, !);                      // in scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+     let mut _2: fn() -> ! {sleep};       // in scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+     let mut _7: ();                      // in scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+     let mut _8: ();                      // in scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+     scope 1 (inlined call_twice::<!, fn() -> ! {sleep}>) { // at $DIR/inline-diverging.rs:22:5: 22:22
+         debug f => _2;                   // in scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         let _3: !;                       // in scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         let mut _4: &fn() -> ! {sleep};  // in scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         let mut _5: &fn() -> ! {sleep};  // in scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         let mut _6: !;                   // in scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         scope 2 {
+             debug a => _3;               // in scope 2 at $DIR/inline-diverging.rs:22:5: 22:22
+             scope 3 {
+                 debug b => _6;           // in scope 3 at $DIR/inline-diverging.rs:22:5: 22:22
+             }
+             scope 6 (inlined <fn() -> ! {sleep} as Fn<()>>::call - shim(fn() -> ! {sleep})) { // at $DIR/inline-diverging.rs:22:5: 22:22
+                 scope 7 (inlined sleep) { // at $DIR/inline-diverging.rs:22:5: 22:22
+                 }
+             }
+         }
+         scope 4 (inlined <fn() -> ! {sleep} as Fn<()>>::call - shim(fn() -> ! {sleep})) { // at $DIR/inline-diverging.rs:22:5: 22:22
+             scope 5 (inlined sleep) {    // at $DIR/inline-diverging.rs:22:5: 22:22
+             }
+         }
+     }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
-         _1 = call_twice::<!, fn() -> ! {sleep}>(sleep) -> bb1; // scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+         StorageLive(_2);                 // scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
+         _2 = sleep;                      // scope 0 at $DIR/inline-diverging.rs:22:5: 22:22
                                           // mir::Constant
-                                          // + span: $DIR/inline-diverging.rs:22:5: 22:15
-                                          // + literal: Const { ty: fn(fn() -> ! {sleep}) -> (!, !) {call_twice::<!, fn() -> ! {sleep}>}, val: Value(Scalar(<ZST>)) }
-                                          // mir::Constant
                                           // + span: $DIR/inline-diverging.rs:22:16: 22:21
                                           // + literal: Const { ty: fn() -> ! {sleep}, val: Value(Scalar(<ZST>)) }
+         StorageLive(_3);                 // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         StorageLive(_4);                 // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         _4 = &_2;                        // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         StorageLive(_7);                 // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         _7 = const ();                   // scope 1 at $DIR/inline-diverging.rs:22:5: 22:22
+         goto -> bb1;                     // scope 5 at $DIR/inline-diverging.rs:22:5: 22:22
      }
  
      bb1: {
-         StorageDead(_1);                 // scope 0 at $DIR/inline-diverging.rs:22:22: 22:23
-         _0 = const ();                   // scope 0 at $DIR/inline-diverging.rs:21:12: 23:2
-         return;                          // scope 0 at $DIR/inline-diverging.rs:23:2: 23:2
+         goto -> bb1;                     // scope 5 at $DIR/inline-diverging.rs:22:5: 22:22
      }
  }
  
