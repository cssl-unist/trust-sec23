// MIR for `main` before PromoteTemps

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/match_false_edges.rs:34:11: 34:11
    let mut _1: i32;                     // in scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
    let mut _2: std::option::Option<i32>; // in scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
    let mut _3: isize;                   // in scope 0 at $DIR/match_false_edges.rs:38:9: 38:16
    let mut _4: isize;                   // in scope 0 at $DIR/match_false_edges.rs:36:9: 36:17
    let mut _5: &std::option::Option<i32>; // in scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
    let _6: i32;                         // in scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
    let _7: &i32;                        // in scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
    let mut _8: bool;                    // in scope 0 at $DIR/match_false_edges.rs:36:21: 36:28
    let _9: std::option::Option<i32>;    // in scope 0 at $DIR/match_false_edges.rs:37:9: 37:11
    let _10: i32;                        // in scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
    let _11: &i32;                       // in scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
    let mut _12: bool;                   // in scope 0 at $DIR/match_false_edges.rs:38:20: 38:29
    let mut _13: i32;                    // in scope 0 at $DIR/match_false_edges.rs:38:27: 38:28
    let _14: std::option::Option<i32>;   // in scope 0 at $DIR/match_false_edges.rs:39:9: 39:11
    scope 1 {
    }
    scope 2 {
        debug _w => _6;                  // in scope 2 at $DIR/match_false_edges.rs:36:14: 36:16
        debug _w => _7;                  // in scope 2 at $DIR/match_false_edges.rs:36:14: 36:16
    }
    scope 3 {
        debug _x => _9;                  // in scope 3 at $DIR/match_false_edges.rs:37:9: 37:11
    }
    scope 4 {
        debug y => _10;                  // in scope 4 at $DIR/match_false_edges.rs:38:14: 38:15
        debug y => _11;                  // in scope 4 at $DIR/match_false_edges.rs:38:14: 38:15
    }
    scope 5 {
        debug _z => _14;                 // in scope 5 at $DIR/match_false_edges.rs:39:9: 39:11
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
        StorageLive(_2);                 // scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
        _2 = Option::<i32>::Some(const 1_i32); // scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
        FakeRead(ForMatchedPlace, _2);   // scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
        _4 = discriminant(_2);           // scope 0 at $DIR/match_false_edges.rs:36:9: 36:17
        switchInt(move _4) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/match_false_edges.rs:36:9: 36:17
    }

    bb1: {
        falseEdge -> [real: bb9, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:37:9: 37:11
    }

    bb2: {
        falseEdge -> [real: bb5, imaginary: bb1]; // scope 0 at $DIR/match_false_edges.rs:36:9: 36:17
    }

    bb3: {
        StorageLive(_14);                // scope 0 at $DIR/match_false_edges.rs:39:9: 39:11
        _14 = _2;                        // scope 0 at $DIR/match_false_edges.rs:39:9: 39:11
        _1 = const 4_i32;                // scope 5 at $DIR/match_false_edges.rs:39:15: 39:16
        StorageDead(_14);                // scope 0 at $DIR/match_false_edges.rs:39:15: 39:16
        goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
    }

    bb4: {
        falseEdge -> [real: bb10, imaginary: bb3]; // scope 0 at $DIR/match_false_edges.rs:38:9: 38:16
    }

    bb5: {
        StorageLive(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
        _7 = &((_2 as Some).0: i32);     // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
        _5 = &shallow _2;                // scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
        StorageLive(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28
        _8 = guard() -> [return: bb6, unwind: bb15]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28
                                         // mir::Constant
                                         // + span: $DIR/match_false_edges.rs:36:21: 36:26
                                         // + literal: Const { ty: fn() -> bool {guard}, val: Value(Scalar(<ZST>)) }
    }

    bb6: {
        switchInt(move _8) -> [false: bb8, otherwise: bb7]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28
    }

    bb7: {
        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33
        FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28
        FakeRead(ForGuardBinding, _7);   // scope 0 at $DIR/match_false_edges.rs:36:27: 36:28
        StorageLive(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
        _6 = ((_2 as Some).0: i32);      // scope 0 at $DIR/match_false_edges.rs:36:14: 36:16
        _1 = const 1_i32;                // scope 2 at $DIR/match_false_edges.rs:36:32: 36:33
        StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33
        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33
        goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
    }

    bb8: {
        StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33
        StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:32: 36:33
        falseEdge -> [real: bb1, imaginary: bb1]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28
    }

    bb9: {
        StorageLive(_9);                 // scope 0 at $DIR/match_false_edges.rs:37:9: 37:11
        _9 = _2;                         // scope 0 at $DIR/match_false_edges.rs:37:9: 37:11
        _1 = const 2_i32;                // scope 3 at $DIR/match_false_edges.rs:37:15: 37:16
        StorageDead(_9);                 // scope 0 at $DIR/match_false_edges.rs:37:15: 37:16
        goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
    }

    bb10: {
        StorageLive(_11);                // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
        _11 = &((_2 as Some).0: i32);    // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
        _5 = &shallow _2;                // scope 0 at $DIR/match_false_edges.rs:35:19: 35:26
        StorageLive(_12);                // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29
        StorageLive(_13);                // scope 0 at $DIR/match_false_edges.rs:38:27: 38:28
        _13 = (*_11);                    // scope 0 at $DIR/match_false_edges.rs:38:27: 38:28
        _12 = guard2(move _13) -> [return: bb11, unwind: bb15]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29
                                         // mir::Constant
                                         // + span: $DIR/match_false_edges.rs:38:20: 38:26
                                         // + literal: Const { ty: fn(i32) -> bool {guard2}, val: Value(Scalar(<ZST>)) }
    }

    bb11: {
        StorageDead(_13);                // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29
        switchInt(move _12) -> [false: bb13, otherwise: bb12]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29
    }

    bb12: {
        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34
        FakeRead(ForMatchGuard, _5);     // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29
        FakeRead(ForGuardBinding, _11);  // scope 0 at $DIR/match_false_edges.rs:38:28: 38:29
        StorageLive(_10);                // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
        _10 = ((_2 as Some).0: i32);     // scope 0 at $DIR/match_false_edges.rs:38:14: 38:15
        _1 = const 3_i32;                // scope 4 at $DIR/match_false_edges.rs:38:33: 38:34
        StorageDead(_10);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34
        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34
        goto -> bb14;                    // scope 0 at $DIR/match_false_edges.rs:35:13: 40:6
    }

    bb13: {
        StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34
        StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:33: 38:34
        falseEdge -> [real: bb3, imaginary: bb3]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29
    }

    bb14: {
        StorageDead(_2);                 // scope 0 at $DIR/match_false_edges.rs:40:6: 40:7
        StorageDead(_1);                 // scope 0 at $DIR/match_false_edges.rs:40:6: 40:7
        _0 = const ();                   // scope 0 at $DIR/match_false_edges.rs:34:11: 41:2
        return;                          // scope 0 at $DIR/match_false_edges.rs:41:2: 41:2
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at $DIR/match_false_edges.rs:34:1: 41:2
    }
}
