error[E0225]: only auto traits can be used as additional traits in a trait object
  --> $DIR/bad-sized.rs:4:28
   |
LL |     let x: Vec<dyn Trait + Sized> = Vec::new();
   |                    -----   ^^^^^ additional non-auto trait
   |                    |
   |                    first non-auto trait
   |
   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Trait + Sized {}`
   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>

error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time
  --> $DIR/bad-sized.rs:4:12
   |
LL |     let x: Vec<dyn Trait + Sized> = Vec::new();
   |            ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   | 
  ::: $SRC_DIR/alloc/src/vec.rs:LL:COL
   |
LL | pub struct Vec<T> {
   |                - required by this bound in `Vec`
   |
   = help: the trait `Sized` is not implemented for `dyn Trait`

error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time
  --> $DIR/bad-sized.rs:4:37
   |
LL |     let x: Vec<dyn Trait + Sized> = Vec::new();
   |                                     ^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `dyn Trait`
   = note: required by `Vec::<T>::new`

error: aborting due to 3 previous errors

Some errors have detailed explanations: E0225, E0277.
For more information about an error, try `rustc --explain E0225`.
