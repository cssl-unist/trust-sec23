error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:1:10
   |
LL | type A = [u8; 4]::AssocTy;
   |          ^^^^^^^^^^^^^^^^ help: try: `<[u8; 4]>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:5:10
   |
LL | type B = [u8]::AssocTy;
   |          ^^^^^^^^^^^^^ help: try: `<[u8]>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:9:10
   |
LL | type C = (u8)::AssocTy;
   |          ^^^^^^^^^^^^^ help: try: `<(u8)>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:13:10
   |
LL | type D = (u8, u8)::AssocTy;
   |          ^^^^^^^^^^^^^^^^^ help: try: `<(u8, u8)>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:17:10
   |
LL | type E = _::AssocTy;
   |          ^^^^^^^^^^ help: try: `<_>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:21:19
   |
LL | type F = &'static (u8)::AssocTy;
   |                   ^^^^^^^^^^^^^ help: try: `<(u8)>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:27:10
   |
LL | type G = dyn 'static + (Send)::AssocTy;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `<dyn 'static + (Send)>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:44:10
   |
LL | type I = ty!()::AssocTy;
   |          ^^^^^^^^^^^^^^ help: try: `<ty!()>::AssocTy`

error: missing angle brackets in associated item path
  --> $DIR/bad-assoc-ty.rs:37:19
   |
LL |     ($ty: ty) => ($ty::AssocTy);
   |                   ^^^^^^^^^^^^ help: try: `<$ty>::AssocTy`
...
LL | type J = ty!(u8);
   |          ------- in this macro invocation
   |
   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:1:10
   |
LL | type A = [u8; 4]::AssocTy;
   |          ^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<[u8; 4] as Trait>::AssocTy`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:5:10
   |
LL | type B = [u8]::AssocTy;
   |          ^^^^^^^^^^^^^ help: use fully-qualified syntax: `<[u8] as Trait>::AssocTy`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:9:10
   |
LL | type C = (u8)::AssocTy;
   |          ^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:13:10
   |
LL | type D = (u8, u8)::AssocTy;
   |          ^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(u8, u8) as Trait>::AssocTy`

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:17:10
   |
LL | type E = _::AssocTy;
   |          ^ not allowed in type signatures

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:21:19
   |
LL | type F = &'static (u8)::AssocTy;
   |                   ^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:27:10
   |
LL | type G = dyn 'static + (Send)::AssocTy;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(dyn Send + 'static) as Trait>::AssocTy`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:33:10
   |
LL | type H = Fn(u8) -> (u8)::Output;
   |          ^^^^^^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(dyn Fn(u8) -> u8 + 'static) as Trait>::Output`

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:37:19
   |
LL |     ($ty: ty) => ($ty::AssocTy);
   |                   ^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`
...
LL | type J = ty!(u8);
   |          ------- in this macro invocation
   |
   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0223]: ambiguous associated type
  --> $DIR/bad-assoc-ty.rs:44:10
   |
LL | type I = ty!()::AssocTy;
   |          ^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:49:13
   |
LL | fn foo<X: K<_, _>>(x: X) {}
   |             ^  ^ not allowed in type signatures
   |             |
   |             not allowed in type signatures
   |
help: use type parameters instead
   |
LL | fn foo<X: K<T, T>, T>(x: X) {}
   |             ^  ^ ^^^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:52:34
   |
LL | fn bar<F>(_: F) where F: Fn() -> _ {}
   |                                  ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | fn bar<F, T>(_: F) where F: Fn() -> T {}
   |         ^^^                         ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:55:19
   |
LL | fn baz<F: Fn() -> _>(_: F) {}
   |                   ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | fn baz<F: Fn() -> T, T>(_: F) {}
   |                   ^^^^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:58:33
   |
LL | struct L<F>(F) where F: Fn() -> _;
   |                                 ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | struct L<F, T>(F) where F: Fn() -> T;
   |           ^^^                      ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:60:30
   |
LL | struct M<F> where F: Fn() -> _ {
   |                              ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | struct M<F, T> where F: Fn() -> T {
   |           ^^^                   ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:64:28
   |
LL | enum N<F> where F: Fn() -> _ {
   |                            ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | enum N<F, T> where F: Fn() -> T {
   |         ^^^                   ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:69:29
   |
LL | union O<F> where F: Fn() -> _ {
   |                             ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | union O<F, T> where F: Fn() -> T {
   |          ^^^                   ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:74:29
   |
LL | trait P<F> where F: Fn() -> _ {
   |                             ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL | trait P<F, T> where F: Fn() -> T {
   |          ^^^                   ^

error[E0121]: the type placeholder `_` is not allowed within types on item signatures
  --> $DIR/bad-assoc-ty.rs:79:38
   |
LL |     fn foo<F>(_: F) where F: Fn() -> _ {}
   |                                      ^ not allowed in type signatures
   |
help: use type parameters instead
   |
LL |     fn foo<F, T>(_: F) where F: Fn() -> T {}
   |             ^^^                         ^

error: aborting due to 28 previous errors

Some errors have detailed explanations: E0121, E0223.
For more information about an error, try `rustc --explain E0121`.
