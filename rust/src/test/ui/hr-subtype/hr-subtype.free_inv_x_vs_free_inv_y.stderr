error[E0308]: mismatched types
  --> $DIR/hr-subtype.rs:39:26
   |
LL |               gimme::<$t2>(None::<$t1>);
   |                            ^^^^^^^^^^^ lifetime mismatch
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   |
   = note: expected enum `Option<fn(Inv<'y>)>`
              found enum `Option<fn(Inv<'x>)>`
note: the lifetime `'x` as defined on the function body at 38:20...
  --> $DIR/hr-subtype.rs:38:20
   |
LL |           fn subtype<'x, 'y: 'x, 'z: 'y>() {
   |                      ^^
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
note: ...does not necessarily outlive the lifetime `'y` as defined on the function body at 38:24
  --> $DIR/hr-subtype.rs:38:24
   |
LL |           fn subtype<'x, 'y: 'x, 'z: 'y>() {
   |                          ^^
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> $DIR/hr-subtype.rs:45:26
   |
LL |               gimme::<$t1>(None::<$t2>);
   |                            ^^^^^^^^^^^ lifetime mismatch
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   |
   = note: expected enum `Option<fn(Inv<'x>)>`
              found enum `Option<fn(Inv<'y>)>`
note: the lifetime `'x` as defined on the function body at 44:22...
  --> $DIR/hr-subtype.rs:44:22
   |
LL |           fn supertype<'x, 'y: 'x, 'z: 'y>() {
   |                        ^^
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
note: ...does not necessarily outlive the lifetime `'y` as defined on the function body at 44:26
  --> $DIR/hr-subtype.rs:44:26
   |
LL |           fn supertype<'x, 'y: 'x, 'z: 'y>() {
   |                            ^^
...
LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),
LL | | fn(Inv<'y>)) }
   | |______________- in this macro invocation
   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0308`.
