note: no external requirements
  --> $DIR/propagate-approximated-fail-no-postdom.rs:43:9
   |
LL | /         |_outlives1, _outlives2, _outlives3, x, y| {
LL | |             // Only works if 'x: 'y:
LL | |             let p = x.get();
LL | |             demand_y(x, y, p)
LL | |         },
   | |_________^
   |
   = note: defining type: supply::{closure#0} with closure substs [
               i16,
               for<'r, 's> extern "rust-call" fn((std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex(0), BrNamed('r)) u32>, std::cell::Cell<&'_#2r &ReLateBound(DebruijnIndex(0), BrNamed('r)) u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed('s)) &'_#3r u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed('r)) u32>, std::cell::Cell<&ReLateBound(DebruijnIndex(0), BrNamed('s)) u32>)),
               (),
           ]
   = note: late-bound region is '_#4r
   = note: late-bound region is '_#5r
   = note: late-bound region is '_#6r

error: lifetime may not live long enough
  --> $DIR/propagate-approximated-fail-no-postdom.rs:46:13
   |
LL |         |_outlives1, _outlives2, _outlives3, x, y| {
   |          ----------              ---------- has type `Cell<&'2 &'_#3r u32>`
   |          |
   |          has type `Cell<&'_#1r &'1 u32>`
...
LL |             demand_y(x, y, p)
   |             ^^^^^^^^^^^^^^^^^ argument requires that `'1` must outlive `'2`

note: no external requirements
  --> $DIR/propagate-approximated-fail-no-postdom.rs:38:1
   |
LL | / fn supply<'a, 'b, 'c>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>, cell_c: Cell<&'c u32>) {
LL | |     establish_relationships(
LL | |         cell_a,
LL | |         cell_b,
...  |
LL | |     );
LL | | }
   | |_^
   |
   = note: defining type: supply

error: aborting due to previous error

