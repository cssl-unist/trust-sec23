note: external requirements
  --> $DIR/ty-param-closure-approximate-lower-bound.rs:24:24
   |
LL |     twice(cell, value, |a, b| invoke(a, b));
   |                        ^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: generic::<T>::{closure#0} with closure substs [
               i16,
               for<'r, 's> extern "rust-call" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex(0), BrNamed('r)) ()>>, &ReLateBound(DebruijnIndex(0), BrNamed('s)) T)),
               (),
           ]
   = note: number of external vids: 2
   = note: where T: '_#1r

note: no external requirements
  --> $DIR/ty-param-closure-approximate-lower-bound.rs:22:1
   |
LL | / fn generic<T>(value: T) {
LL | |     let cell = Cell::new(&());
LL | |     twice(cell, value, |a, b| invoke(a, b));
LL | | }
   | |_^
   |
   = note: defining type: generic::<T>

note: external requirements
  --> $DIR/ty-param-closure-approximate-lower-bound.rs:29:24
   |
LL |     twice(cell, value, |a, b| invoke(a, b));
   |                        ^^^^^^^^^^^^^^^^^^^
   |
   = note: defining type: generic_fail::<T>::{closure#0} with closure substs [
               i16,
               for<'r, 's> extern "rust-call" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(DebruijnIndex(0), BrNamed('r)) ()>>, &ReLateBound(DebruijnIndex(0), BrNamed('s)) T)),
               (),
           ]
   = note: late-bound region is '_#2r
   = note: number of external vids: 3
   = note: where T: '_#1r

note: no external requirements
  --> $DIR/ty-param-closure-approximate-lower-bound.rs:28:1
   |
LL | / fn generic_fail<'a, T>(cell: Cell<&'a ()>, value: T) {
LL | |     twice(cell, value, |a, b| invoke(a, b));
LL | |
LL | | }
   | |_^
   |
   = note: defining type: generic_fail::<T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/ty-param-closure-approximate-lower-bound.rs:29:24
   |
LL |     twice(cell, value, |a, b| invoke(a, b));
   |                        ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `T: 'a`...

error: aborting due to previous error

For more information about this error, try `rustc --explain E0309`.
