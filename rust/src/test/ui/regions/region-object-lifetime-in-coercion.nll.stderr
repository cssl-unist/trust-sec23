error: lifetime may not live long enough
  --> $DIR/region-object-lifetime-in-coercion.rs:8:12
   |
LL | fn a(v: &[u8]) -> Box<dyn Foo + 'static> {
   |         - let's call the lifetime of this reference `'1`
LL |     let x: Box<dyn Foo + 'static> = Box::new(v);
   |            ^^^^^^^^^^^^^^^^^^^^^^ type annotation requires that `'1` must outlive `'static`

error: lifetime may not live long enough
  --> $DIR/region-object-lifetime-in-coercion.rs:13:5
   |
LL | fn b(v: &[u8]) -> Box<dyn Foo + 'static> {
   |         - let's call the lifetime of this reference `'1`
LL |     Box::new(v)
   |     ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'static`

error: lifetime may not live long enough
  --> $DIR/region-object-lifetime-in-coercion.rs:19:5
   |
LL | fn c(v: &[u8]) -> Box<dyn Foo> {
   |         - let's call the lifetime of this reference `'1`
...
LL |     Box::new(v)
   |     ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'static`

error: lifetime may not live long enough
  --> $DIR/region-object-lifetime-in-coercion.rs:23:5
   |
LL | fn d<'a,'b>(v: &'a [u8]) -> Box<dyn Foo+'b> {
   |      -- -- lifetime `'b` defined here
   |      |
   |      lifetime `'a` defined here
LL |     Box::new(v)
   |     ^^^^^^^^^^^ returning this value requires that `'a` must outlive `'b`
   |
   = help: consider adding the following bound: `'a: 'b`

error: aborting due to 4 previous errors

