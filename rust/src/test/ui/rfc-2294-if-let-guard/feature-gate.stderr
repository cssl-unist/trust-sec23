error: no rules expected the token `let`
  --> $DIR/feature-gate.rs:81:15
   |
LL |     macro_rules! use_expr {
   |     --------------------- when calling this macro
...
LL |     use_expr!(let 0 = 1);
   |               ^^^ no rules expected this token in macro call

error[E0658]: `if let` guard is not implemented
  --> $DIR/feature-gate.rs:7:12
   |
LL |         () if let 0 = 1 => {}
   |            ^^^^^^^^^^^^
   |
   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information
   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable

error[E0658]: `if let` guard is not implemented
  --> $DIR/feature-gate.rs:77:12
   |
LL |         () if let 0 = 1 => {}
   |            ^^^^^^^^^^^^
   |
   = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information
   = help: add `#![feature(if_let_guard)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:11:16
   |
LL |         () if (let 0 = 1) => {}
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:15:18
   |
LL |         () if (((let 0 = 1))) => {}
   |                  ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:19:23
   |
LL |         () if true && let 0 = 1 => {}
   |                       ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:23:15
   |
LL |         () if let 0 = 1 && true => {}
   |               ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:27:16
   |
LL |         () if (let 0 = 1) && true => {}
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:31:24
   |
LL |         () if true && (let 0 = 1) => {}
   |                        ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:35:16
   |
LL |         () if (let 0 = 1) && (let 0 = 1) => {}
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:35:31
   |
LL |         () if (let 0 = 1) && (let 0 = 1) => {}
   |                               ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:41:15
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |               ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:41:28
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                            ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:41:42
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                          ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:41:55
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                                       ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:41:68
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                                                    ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:53:15
   |
LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:69:16
   |
LL |     use_expr!((let 0 = 1 && 0 == 0));
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error[E0658]: `let` expressions in this position are experimental
  --> $DIR/feature-gate.rs:72:16
   |
LL |     use_expr!((let 0 = 1));
   |                ^^^^^^^^^
   |
   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information
   = help: add `#![feature(let_chains)]` to the crate attributes to enable

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:7:15
   |
LL |         () if let 0 = 1 => {}
   |               ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:11:16
   |
LL |         () if (let 0 = 1) => {}
   |                ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:15:18
   |
LL |         () if (((let 0 = 1))) => {}
   |                  ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:19:23
   |
LL |         () if true && let 0 = 1 => {}
   |                       ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:23:15
   |
LL |         () if let 0 = 1 && true => {}
   |               ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:27:16
   |
LL |         () if (let 0 = 1) && true => {}
   |                ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:31:24
   |
LL |         () if true && (let 0 = 1) => {}
   |                        ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:35:16
   |
LL |         () if (let 0 = 1) && (let 0 = 1) => {}
   |                ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:35:31
   |
LL |         () if (let 0 = 1) && (let 0 = 1) => {}
   |                               ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:41:15
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |               ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:41:28
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                            ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:41:42
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                          ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:41:55
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                                       ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:41:68
   |
LL |         () if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) => {}
   |                                                                    ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:53:15
   |
LL |         () if let Range { start: _, end: _ } = (true..true) && false => {}
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:69:16
   |
LL |     use_expr!((let 0 = 1 && 0 == 0));
   |                ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: `let` expressions are not supported here
  --> $DIR/feature-gate.rs:72:16
   |
LL |     use_expr!((let 0 = 1));
   |                ^^^^^^^^^
   |
   = note: only supported directly in conditions of `if`- and `while`-expressions
   = note: as well as when nested within `&&` and parenthesis in those conditions

error: aborting due to 36 previous errors

For more information about this error, try `rustc --explain E0658`.
